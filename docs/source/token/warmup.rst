0. Warm up
==========

Let's make sure you are able to run Certora Sunbeam. Run the following:

.. code-block:: bash

   cd meridian2024-workshop
   certoraRun confs/setup.conf

You should see an output like so:

.. code-block:: bash

   INFO: Executing build process...
   Executing:  cargo build --target=wasm32-unknown-unknown --release  --features cvt
   
   Connecting to server...
   
   Job submitted to server
   
   Manage your jobs at https://prover.certora.com
   Follow your job and see verification results at <LINK>

Click on that link to see the report page generated by Certora Sunbeam.
It will show you that a basic :index:`sanity` check has passed.
You can see the *Source Files* on the report page.
There is also a *Call Trace* that shows you what sequence of function calls led to this
outcome.

.. index:: satisfy

:clink:`src/certora/spec.rs <@token-proj/src/certora/spec.rs>` will show you the
*sanity* rule we just ran.
This rule simply calls :rust:`Token::balance()` and checks that the control reaches
the :cvl:`satisfy` statement that follows.
You can read more about :cvl:`satisfy`
`here <https://docs.certora.com/en/latest/docs/cvl/statements.html#satisfy>`_.

.. important::

   If you are not able to run certoraRun, see the `Sunbeam Troubleshooting`_ section in
   the Documentation.

.. dropdown:: Solution

   .. cvlinclude:: @token-proj/solutions/solution_specs.rs
      :language: rust
      :start-at: Exercise 0
      :end-before: Exercise 1
      :caption:


.. Links
   =====

.. _Sunbeam Troubleshooting:
   https://docs.certora.com/en/latest/docs/sunbeam/troubleshooting.html
